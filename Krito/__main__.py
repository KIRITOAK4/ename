import glob
from pathlib import Path
import logging
from Krito import pbot, ubot, Config
import random
import asyncio
from pyrogram.raw.all import layer
from pyrogram import __version__ , compose
from datetime import datetime
from pytz import timezone
from aiohttp import web
from route import web_server

logging.basicConfig(format='[%(levelname) 5s/%(asctime)s] %(name)s: %(message)s',
                    level=logging.WARNING)

async def start_clients():
    await pbot.start()
    await ubot.start()

async def main():
    await start_clients()

if __name__ == "__main__":
    asyncio.run(main())
    me = await pbot.get_me()
    pbot.mention = me.mention
    pbot.username = me.username  
    pbot.uptime = Config.BOT_UPTIME     
    if Config.WEBHOOK:
        app = web.AppRunner(await web_server())
        await app.setup()       
        await web.TCPSite(app, "0.0.0.0", 8080).start()     
    print(f"{me.first_name} IÍú± S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö.....‚ú®Ô∏è")
    for id in Config.ADMIN:
        try: await pbot.send_message(id, f"**__{me.first_name}  IÍú± S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö.....‚ú®Ô∏è__**")                                
        except: pass
    if Config.LOG_CHANNEL:
        try:
            curr = datetime.now(timezone("Asia/Kolkata"))
            date = curr.strftime('%d %B, %Y')
            time = curr.strftime('%I:%M:%S %p')
            await pbot.send_message(Config.LOG_CHANNEL, f"**__{me.mention} IÍú± R·¥ás·¥õ·¥Ä Ä·¥õ·¥á·¥Ö !!**\n\nüìÖ D·¥Ä·¥õ·¥á : `{date}`\n‚è∞ T…™·¥ç·¥á : `{time}`\nüåê T…™·¥ç·¥á·¥¢·¥è…¥·¥á : `Asia/Kolkata`\n\nüâê V·¥á Äs…™·¥è…¥ : `v{__version__} (Layer {layer})`</b>")                                
        except:
            print("P ü·¥á·¥ÄÍú±·¥á M·¥Ä·¥ã·¥á T ú…™Íú± IÍú± A·¥Ö·¥ç…™…¥ I…¥ Y·¥è·¥ú Ä L·¥è…¢ C ú·¥Ä…¥…¥·¥á ü")
